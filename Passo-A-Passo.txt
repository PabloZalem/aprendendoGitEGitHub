Comando para decorar:
	git init = Esse comando serve para inicializar seu bash.


	
Como atualizar o git:
	git status = arquivos foram adicionado ou não, e se o arquivo foi atualizado.



Como adicionar o git:
	git add "nome completo do arquivo" entre aspas duplas.



Como adicionar mais de um arquivo no git de uma vez só:
	git add .



Como criar versões do código com commit:
	git commit -m "O que foi feito"

Para configurar o git:
	git config --global user.email
	git config --golval user.name



Como enviar alterações usando git Push:
	Cria-se um repositório no GitHub, pegue aque linke e use-o para linkar com o git.

Para ligar repositório local com o remoto:
	git remote add origin + SSH
	git remote -v;
	git push -u origin master
->
git@github.com:PabloZalem/TestApiComSwagger.git

	git push --set-upstream origin master = Isso quer dizer que ainda não definimos para qual branch nós estamos enviando.
	Isso tudo mostra que o nosso projeto foi adicionado.
	

Ciclo de atualização de código:
	git status = Para saber se tem alguma alteração;
	git add . = Para adicionar essas alterações;
	git status = Para saber se está tudo certo;
	git commit -m "O que está sendo commitado";
	git status;
	git push: Esse comando é para mandar a atualização para minha Branch Master.
	


Como verificar o histórico de atualização:
	git reflog:  A versão mais atual é a que fica no topo.
	


Como Navegar entre versões do seu código:	
	git reset --hard 2a63261:
Ele volta para a versão raiz. 	
	Esse número seria o id.
	Ele ira resetar para versão mais antiga;
	Caso queira voltar, apenas fazer um git reflog que voltará normalmente.
	Ao criar commits, você está criando cópias do seu código uma forma de lidar com isso.
	


O que são branchs e como criar uma:
	Branch significa galho: mas trazendo para o contexto são caminhos difentes no processo de desenvolvimento.
	Tem uma Branch principal que toda a alteração que tivermos mandaremos para lá.
	Cada versão é uma atualização.
	Para criar uma nova branch:
	git branch stating;
	Geralmente esse nome é nome dado que recebe atualizações.
	Para saber qual branch que estamos usando, é ver se está verde e tem asterisco.
	Para mudar de branch:
	git checkout staging.
		

***Como alterar o repositório
	git remote remove github + nome do repositorio.

Visualizando REMOTE:
	Para viasualizar qualquer remote existente para seu repositório, podemos rodar git remote ou git remote -v.
	Esse comando apenas mostra uma lista de remotes.
	Se você não adicionou algum remoto ainda, ele não motrará nada.
	

Adicionar Remote:
	Git remote add origin <url>
	Origin é o nome curte para a url.
	Que siginifica que quando ainda eu uso o nome origin, eu estou referindo para a url do github particuar como um nome pseudomico.
	O nome origin é o  convencional git remote name, ele não é tão especial.
	É apenas um nome para uma URL.
	Quando compiamos um GitHub repo, o nome remote predefinido ele aberto para nós é chamado origin.
	Você pode mudar isso.
	Muitas pessoas partir disso como é.
	Como temos master como a branch padrão igual que origin é padrão, se necessário podemos mudar o nome.
	

git remote;
git remote -v
git remote add origin https://github.com/PabloZalem/aprendendoGitEGitHub.git
git remote: Aparece o nome que você colocou no caso foi o origin
git remote -v: aparecerá o:
	versionamento principal para (fetch) e (push).
	git remote rename origin: esse comando é para alterar o nome da master de origin seria para outro master:
	git remote renam origin pablo. Aparecerá no lugar do origin o pablo.
git remote rename origin pablo.	
git remote remove origin
	Esse passo-passo é para remover o origin.
git log: 
	Esse comando é para saber do histórico.

	